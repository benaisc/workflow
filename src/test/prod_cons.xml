<assembly>
	<declare>
		<component name="RandProducer">
			<dataOut name="randNumber" type="int"/>
			<dataOut name="specialNumber" type="double"/>
		</component>

		<component name= "ConsummerMapper">
			<dataIn name="traitementA" type="int"/>
			<dataIn name="traitementB" type="int"/>
			<dataIn name="traitementSpecial" type="double"/>
			<dataOut name="dataReport" type="string"/>
		</component>

		<component name= "InputStringLogger">
			<dataIn name="reportDataFeed" type="string"/>
		</component>

		<instance name="producer" componentRef="RandProducer" path="/Servers/RandProducer/launch.sh" signature="TYPE_OPAQUE"/>
		<instance name="consummer" componentRef="ConsummerMapper" path="/Clients/ConsummerMapper/launch.sh" signature="TYPE_OPAQUE"/>
		<instance name="logger" componentRef="InputStringLogger" path="/Loggers/InputStringLogger/launch.sh" signature="TYPE_OPAQUE"/>

		<configPort>
			<inout>
				<setPort in="consummer.traitementA" out="producer.randNumber"/>
				<setPort in="consummer.traitementB" out="producer.randNumber"/>
				<setPort in="consummer.traitementSpecial" out="producer.specialNumber"/>
				<setPort in="logger.reportDataFeed" out="consummer.dataReport"/>
			</inout>
		</configPort>
	</declare>

	<instruction>
		<sequence>
			<exectask name="producer"/>
			<exectask name="consummer"/>
			<exectask name="logger"/>
		</sequence>
	</instruction>
</assembly>
