<!--
Méthode de lecture d’un Assembly :
On déclare les interfaces de composants (ports),
leurs implémentations (instances) et le mapping
à ordonnancer (configport) lors de l’execution d’instructions
-->

stcmassembly ::= <stcmassembly> declaration? instruction? </stcmassembly>

declaration ::= <declare> component* instance* configport? </declare>

component ::= <component name=string> port? </component>

port ::= <port> dataIn* | dataOut* </port>
dataIn ::= <dataIn name=string type=string (set=string)?/>
dataOut ::= <dataOut name=string type=string/>

instance ::= <instance name=string componentRef=string path=string signature=string/>

configport ::= <configport> inout </configport>
inout ::= <inout> setPort* | unsetPort* </inout>
setPort ::= <setPort in=string out=string/>
unsetPort ::= <unsetPort in=string (out=string)?/>

instruction ::= <instruction> sequence|exectask|createInstance </instruction>

sequence ::=
<sequence name=string>
  port* attribute* declaration instruction+
</sequence>

createInstance ::= <createInstance name=string componentRef=string PATH=string signature=string/>

exectask ::= <exectask nameInstance=string/>
