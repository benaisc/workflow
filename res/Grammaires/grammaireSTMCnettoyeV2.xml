component ::=
<component name=string (extends=string)?>
  port* [attribute*] primitive
</component>

port ::= inport | outport [| clientport | serverport]

[clientport ::= <clientPort name=string type=string (set=string)?/>
serverport ::= <serverPort name=string type=string/>]

inport ::= <dataIn name=string type=string/>
outport ::= <dataOut name=string type=string/>

[ attribute ::= <attribute name=string type=string (set=string)?/> ]

content ::= primitive [| composite]
primitive ::= <impl type=string signature=string/>

[composite ::= <body> stcmassembly </body>]

stcmassembly ::= declaration instruction ///point entrée

declaration ::= <declare> component* instance* configport* </declare>

instance ::=
<instance name=string componentRef=string parameters=string/>

configport ::= inout [| clientserver]

[ clientserver ::= <setPort client=string server=string/>
| <unsetPort client=string (server=string)?/> ]

inout ::= <setPort in=string out=string/> | <unsetPort in=string out=string)?/>

instruction ::= createInstance|executetask|configport|seq|if| <!-- ces instructions constitue le dag -->

createInstance ::= <createInstance name=string componentRef=string PATH=string signature=string/>

executetask ::= <exectask nameInstance=string/>

seq ::=
<sequence name=string>
  port* attribute* declaration instruction+
</sequence>

if ::= <if name=string> port* attribute* declaration condition then else?</if>
condition ::= <condition> expr </condition>
then ::= <then> stcmassembly </then>
else ::= <else> stcmassembly </else>

boolean ::= "true" | "false"
