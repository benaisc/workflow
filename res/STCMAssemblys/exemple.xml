<!-- UN ASSEMBLAGE EST L'ÉLEMENT D'ENTRÉE DE NOTRE LANGAGE -->
<!-- C'EST LA DEFINITION EN EXTENSION DES COMPOSANT INTER-OPÉRABLE -->
<assembly>
	<!-- BLOC PERMETTANT DE DECLARER LES COMPOSANTS -->
	<!-- DE DEFINIR LES INSTANCES DES COMPOSANT DÉCLARÉS -->
	<!-- ET MAPPER LES INSTANCES VIA LEUR PORTS -->
	<declare>
		<component name= "C1">
			<dataOut name="outC1" type="string"/>
			<!-- Attribute is optionnal we don't use it for this example-->
		</component>

		<component name= "C2">
			<dataIn name="inC2" type="string"/>
			<dataOut name="outC2" type="string"/>
			<!-- Attribute is optionnal we don't use it for this example-->
		</component>

		<component name= "C3">
			<dataIn name="inC3" type="string"/>
			<dataOut name="outC3" type="string"/>
			<!-- Attribute is optionnal we don't use it for this example-->
		</component>


		<instance name="T1" componentRef="C1">
  			<impl type="c" signature=."/programs/HelloRPC"/>
		</instance>

		<instance name="T2" componentRef="C2">
  			<impl type="c" signature="./programs/NameRPC"/>
		</instance>

		<instance name="T3" componentRef="C3">
  			<impl type="c" signature="./programs/FunRPC"/>
		</instance>


		<setPort in="T1.outC1" out="T2.inC2"/>
		<setPort in="T2.outC2" out="T3.inC3"/>	

	</declare>

	<!--  INTRUCTION ON FAIT LE CHOIX DE SEQUENCE -->
	<!-- INSTRUCTION POSSIBLE : createInstance?|executetask|configport|seq|if -->

	<sequence name="seqMain">
		<!-- PORT OPTIONNEL NOUS N'EN UTILISERONS PAS POUR CET EXEMPLE -->
		<!-- DECLARATION OPTIONNEL ON PEUT UTILISER CELLE FAITES PRECEDEMENT -->

		<!-- NOUS N'UTILISONS SUR LES EXECTAST MAIS IL EST POSSIBLE D'UTILISER N'IMPORTE QUELLE INSTRUCTION -->
		<!-- INSTRUCTION POSSIBLE : createInstance?|executetask|configport|seq|if -->
		<exectask nameInstance="T1"/>
		<exectask nameInstance="T2"/>
		<exectask nameInstance="T3"/>

	</sequence>
</assembly>






